# This is a basic workflow to help you get started with Actions

name: Docker Series Builds - CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Build Java with Gradle
        run: ./gradlew build
     
      - name: Build Docker Image
        if: success()
        run: |
          mkdir output
          docker build --build-arg AA_VERSION=v1.0.RELEASE --build-arg OS_IMAGE=centos . --file ./dockerfile/Dockerfile -t springboot_ci_demo
          docker run --detach springboot_ci_demo
          docker export $(docker ps --format "{{.ID}}") > ./output/springboot_ci_demo6.tar
       
      - name: List all the files under output dir-1
        run: ls output
        
      - name: Upoading the artifact (~Image)
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: aa-docker-image_v6.0
          path: ./output
          
      - name: List all the files under output dir-2
        run: ls output
      
